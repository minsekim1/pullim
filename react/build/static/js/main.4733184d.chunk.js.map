{"version":3,"sources":["page/CaptureList.tsx","components/CaptureButton.tsx","components/CheckToolButton.tsx","components/CaptureListButton.tsx","components/RecordAndPrescriptionButton.tsx","components/ButtonGroup.tsx","page/RecordAndPrescription.tsx","page/CheckTool.tsx","page/Bodypix.js","App.tsx","reportWebVitals.js","index.tsx"],"names":["CaptureList","Array","Function","photoList","setPhotoList","setIsModal","setSrc","photoRef","useRef","buttonRef","savePhoto","formData","FormData","forEach","photo","i","data","Blob","type","append","axios","post","then","res","success","alert","onDeleteHandler","e","array","filter","photoIndex","photoRefArray","current","el","elIndex","buttonRefArray","console","log","useEffect","undefined","item","addEventListener","style","display","removeEventListener","color","width","height","flexDirection","alignItems","overflowY","minHeight","length","map","ref","marginBottom","position","src","alt","onClick","bottom","right","background","borderRadius","fontSize","CaptureButton","vedioRef","useState","isClick","setIsClick","useScreenshot","image","takeScreenshot","id","margin","canvasRef","document","querySelector","CheckToolButton","setCurrentPage","catchPullimRef","getElementById","CaptureListButton","btnIdRef","RecordAndPrescriptionButton","ButtonGroup","Container","buttonGroupRef","zIndex","left","RecordAndPrescription","CheckTool","BodyPixView","visible","setVisible","start","setStart","marginLeft","disabled","options","showFps","mediaOptions","audio","onEvent","event","video","srcObject","stream","play","ZoomMtg","setZoomJSLib","preLoadWasm","prepareWebSDK","i18n","load","reload","App","url","setUrl","name","setName","isEnter","setIsEnter","isHost","setIsHost","currentPage","isModal","isBodypix","setIsBodypix","location","href","split","sdkKey","meetingNumber","slice","indexOf","passWord","className","justifyContent","value","checked","htmlFor","padding","marginRight","onChange","target","preventDefault","root","setting","leaveUrl","showMeetingHeader","disableInvite","disableCallOut","disableRecord","disableJoinAudio","audioPanelAlwaysOpen","showPureSharingContent","isSupportAV","isSupportChat","isSupportQA","isSupportCC","isSupportPolling","isSupportBreakout","screenShare","videoDrag","videoHeader","isLockBottom","isSupportNonverbal","isShowJoiningErrorDialog","inviteUrlFormat","meetingInfo","disableVoIP","disableReport","disablePreview","disableCORP","onRetryCallback","enableHD","helper","join_data","signature","generateSDKSignature","sdkSecret","role","info","error","userName","userEmail","tk","init","join","top","backgroundColor","overflow","prev","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4733184d.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\n\r\nexport default function CaptureList(\r\n  { photoList, setPhotoList, setIsModal, setSrc }: any = { Array, Function }\r\n) {\r\n  const photoRef = useRef([]) as any;\r\n  const buttonRef = useRef([]) as any;\r\n  const savePhoto = async () => {\r\n    let formData = new FormData();\r\n    photoList.forEach((photo: string, i: number) => {\r\n      const data = new Blob([photo], { type: \"image/png\" });\r\n      formData.append(\"photos\", data, \"photo\" + i);\r\n    });\r\n    const response = await axios\r\n      .post(\"/photo\", formData)\r\n      .then((res) => res.data);\r\n    if (response.success) {\r\n      alert(\"저장 완료!\");\r\n    }\r\n  };\r\n\r\n  // const savePhotoToLocal = () =>{\r\n    \r\n  // }\r\n\r\n  const onDeleteHandler = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\r\n    i: number\r\n  ) => {\r\n    const array = photoList.filter(\r\n      (photo: string, photoIndex: number) => i !== photoIndex\r\n    );\r\n    const photoRefArray = photoRef.current.filter(\r\n      (el: HTMLElement, elIndex: number) => i !== elIndex\r\n    );\r\n    const buttonRefArray = buttonRef.current.filter(\r\n      (el: HTMLElement, elIndex: number) => i !== elIndex\r\n    );\r\n    console.log(\"삭제된 것\", i);\r\n    setPhotoList(array);\r\n    photoRef.current = photoRefArray;\r\n    buttonRef.current = buttonRefArray;\r\n  };\r\n  useEffect(() => {\r\n    if (photoRef!.current !== undefined && buttonRef.current !== undefined) {\r\n      photoList.forEach((item: string, i: number) => {\r\n        photoRef.current[i]?.addEventListener(\"mouseover\", () => {\r\n          buttonRef.current[i]!.style.display = \"block\";\r\n        });\r\n        photoRef.current[i]?.addEventListener(\"mouseleave\", () => {\r\n          buttonRef.current[i].style.display = \"none\";\r\n        });\r\n      });\r\n    }\r\n    return () => {\r\n      photoList.forEach((item: string, i: number) => {\r\n        if (\r\n          photoRef!.current !== undefined &&\r\n          buttonRef.current !== undefined\r\n        ) {\r\n          photoRef.current[i]?.removeEventListener(\"mouseover\", () => {\r\n            buttonRef.current[i]!.style.display = \"block\";\r\n          });\r\n          photoRef.current[i]?.removeEventListener(\"mouseleave\", () => {\r\n            buttonRef.current[i]!.style.display = \"none\";\r\n          });\r\n        }\r\n      });\r\n    };\r\n  }, [photoList]);\r\n  return (\r\n    <>\r\n      <h4 style={{color: \"black\"}}>저장된 화면캡처 화면</h4>\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"90vh\",\r\n          color: \"white\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          overflowY: \"auto\",\r\n        }}\r\n      >\r\n        <div style={{ minHeight: \"500px\", width: \"100%\" }}>\r\n          {photoList.length !== 0 &&\r\n            photoList.map((photo: string, i: number) => (\r\n              <div\r\n                key={i}\r\n                ref={(el) => (photoRef.current[i] = el)}\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"250px\",\r\n                  marginBottom: \"10px\",\r\n                  position: \"relative\",\r\n                }}\r\n              >\r\n                <img\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                  src={photo}\r\n                  alt=\"asa\"\r\n                  onClick={() =>{\r\n                    setIsModal(true);\r\n                    setSrc(photoList[i]);\r\n                  }}\r\n                />\r\n                <button\r\n                  ref={(el) => (buttonRef.current[i] = el)}\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    bottom: 0,\r\n                    right: 2,\r\n                    width: \"30px\",\r\n                    background: \"red\",\r\n                    borderRadius: \"50px\",\r\n                    display: \"none\",\r\n                  }}\r\n                  onClick={(e) => onDeleteHandler(e, i)}\r\n                >\r\n                  x\r\n                </button>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n      <section style={{display: \"flex\", width: \"100%\"}}>\r\n        <button\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"10vh\",\r\n            background: \"red\",\r\n            borderRadius: \"5px\",\r\n            color: \"white\",\r\n            fontSize: \"11px\",\r\n          }}\r\n          onClick={savePhoto}\r\n        >\r\n          사진저장\r\n        </button>\r\n        {/* <button\r\n          onClick={savePhotoToLocal}\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"10vh\",\r\n            background: \"royalblue\",\r\n            borderRadius: \"5px\",\r\n            color: \"white\",\r\n            fontSize: \"11px\",\r\n          }}>\r\n          내컴퓨터에 저장\r\n        </button> */}\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useScreenshot } from \"use-screenshot-hook\";\r\nimport { UseScreenshotProps } from \"use-screenshot-hook/dist/types\";\r\n\r\nfunction CaptureButton({ setPhotoList, photoList }: any) {\r\n  //ref는 고정적으로 값을 가지고 있음\r\n  const vedioRef = useRef();\r\n  const [isClick, setIsClick] = useState(false as any);\r\n  const { image, takeScreenshot } = useScreenshot({\r\n    ref: vedioRef,\r\n  } as UseScreenshotProps);\r\n\r\n  const onClickHandler = () => {\r\n    //비디오 켰을 때 캡쳐 가능\r\n    const canvasRef = document.querySelector(\".single-main-container__canvas\");\r\n    vedioRef.current = canvasRef as any;\r\n\r\n    //클릭 완료!\r\n    setIsClick(true);\r\n  };\r\n\r\n  //클릭했을 때 반응\r\n  useEffect(() => {\r\n    if (isClick) {\r\n      takeScreenshot();\r\n      setIsClick(false);\r\n    }\r\n  }, [isClick]);\r\n\r\n  useEffect(() => {\r\n    console.log(image);\r\n    if (image) {\r\n      setPhotoList([image, ...photoList]);\r\n    }\r\n  }, [image]);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        id=\"screenshot_btn\"\r\n        style={{\r\n          width: \"100px\",\r\n          height: \"40px\",\r\n          background: \"royalblue\",\r\n          borderRadius: \"5px\",\r\n          color: \"white\",\r\n          fontSize: \"11px\",\r\n          margin: \"3px\"\r\n        }}\r\n        onClick={onClickHandler}\r\n      >\r\n        화면캡처\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CaptureButton;\r\n","import React, { useState } from 'react'\r\n\r\nfunction CheckToolButton({setCurrentPage}: any) {\r\n  const [isClick, setIsClick] = useState(0 as number);\r\n\r\n  const onClickHandler = () => {\r\n    //풀림페이지 생성\r\n    const catchPullimRef = document.getElementById(\r\n      \"pullim-page\"\r\n    ) as HTMLDivElement;\r\n    if (isClick % 2 === 0) {\r\n      catchPullimRef.style.display = \"flex\";\r\n    } else {\r\n      catchPullimRef.style.display = \"none\";\r\n    }\r\n    setIsClick(isClick + 1); //클릭시 +1!\r\n    setCurrentPage(\"CheckTool\");\r\n  };\r\n\r\n  return (\r\n    <button style={{\r\n      width: \"100px\",\r\n      height: \"40px\",\r\n      background: \"royalblue\",\r\n      borderRadius: \"5px\",\r\n      color: \"white\",\r\n      fontSize: \"11px\",\r\n      margin: \"3px\"\r\n    }}\r\n    onClick={onClickHandler}>\r\n      검사툴\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default CheckToolButton","import React, { useRef, useState } from \"react\";\r\n\r\nfunction CaptureListButton({setCurrentPage}: any) {\r\n  //ref는 고정적으로 값을 가지고 있음\r\n  const btnIdRef = useRef() as any;\r\n\r\n  const [isClick, setIsClick] = useState(0 as number);\r\n\r\n  const onClickHandler = () => {\r\n    //풀림페이지 생성\r\n    const catchPullimRef = document.getElementById(\r\n      \"pullim-page\"\r\n    ) as HTMLDivElement;\r\n    if (isClick % 2 === 0) {\r\n      catchPullimRef.style.display = \"flex\";\r\n    } else {\r\n      catchPullimRef.style.display = \"none\";\r\n    }\r\n    setIsClick(isClick + 1); //클릭시 +1!\r\n    setCurrentPage(\"CaptureList\");\r\n  };\r\n\r\n  return (\r\n      <button\r\n        ref={btnIdRef}\r\n        style={{\r\n          width: \"100px\",\r\n          height: \"40px\",\r\n          background: \"royalblue\",\r\n          borderRadius: \"5px\",\r\n          color: \"white\",\r\n          fontSize: \"11px\",\r\n          margin: \"3px\"\r\n        }}\r\n        onClick={onClickHandler}\r\n      >\r\n        저장된 화면캡처 화면\r\n      </button>\r\n  );\r\n}\r\n\r\nexport default CaptureListButton;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction RecordAndPrescriptionButton({setCurrentPage}: any) {\r\n  const [isClick, setIsClick] = useState(0 as number);\r\n\r\n  const onClickHandler = () => {\r\n    //풀림페이지 생성\r\n    const catchPullimRef = document.getElementById(\r\n      \"pullim-page\"\r\n    ) as HTMLDivElement;\r\n    if (isClick % 2 === 0) {\r\n      catchPullimRef.style.display = \"flex\";\r\n    } else {\r\n      catchPullimRef.style.display = \"none\";\r\n    }\r\n    setIsClick(isClick + 1); //클릭시 +1!\r\n    setCurrentPage(\"RecordAndPrescription\");\r\n  };\r\n  return (\r\n      <button\r\n        onClick={onClickHandler}\r\n        style={{\r\n          width: \"100px\",\r\n          height: \"40px\",\r\n          background: \"royalblue\",\r\n          borderRadius: \"5px\",\r\n          color: \"white\",\r\n          fontSize: \"11px\",\r\n          margin: \"3px\"\r\n        }}\r\n      >\r\n        진단 기록 및 운동(VOD) 처방\r\n      </button>\r\n  );\r\n}\r\n\r\nexport default RecordAndPrescriptionButton;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport CaptureButton from \"./CaptureButton\";\r\nimport CheckToolButton from \"./CheckToolButton\";\r\nimport CaptureListButton from \"./CaptureListButton\";\r\nimport RecordAndPrescriptionButton from \"./RecordAndPrescriptionButton\";\r\n\r\nfunction ButtonGroup(\r\n  { setPhotoList, photoList, setCurrentPage }: any = { Function, Array }\r\n) {\r\n  const Container = useRef<any>();\r\n  const buttonGroupRef = useRef<any>();\r\n\r\n  useEffect(() => {\r\n    if (buttonGroupRef.current !==undefined && Container.current !== undefined){\r\n      Container.current.addEventListener(\"mouseover\", () => {\r\n        buttonGroupRef.current.style.display = \"flex\";\r\n      });\r\n      Container.current.addEventListener(\"mouseleave\", () => {\r\n        buttonGroupRef.current.style.display = \"none\";\r\n      });\r\n    }\r\n    return () => {\r\n      if(buttonGroupRef!.current !==undefined && Container!.current !== undefined){\r\n        Container!.current.removeEventListener(\"mouseover\", () => {\r\n          buttonGroupRef!.current.style.display = \"flex\";\r\n        });\r\n        Container!.current.removeEventListener(\"mouseleave\", () => {\r\n          buttonGroupRef!.current.style.display = \"none\";\r\n        });\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      ref={Container}\r\n      style={{\r\n        position: \"absolute\",\r\n        bottom: \"30%\",\r\n        zIndex: 100,\r\n        left: \"1%\",\r\n        width: \"150px\",\r\n        minHeight: \"180px\",\r\n        // background: \"white\"\r\n      }}\r\n    >\r\n      <div\r\n        ref={buttonGroupRef}\r\n        style={{\r\n          display: \"none\",\r\n          flexDirection: \"column\",\r\n          width: \"300px\"\r\n        }}\r\n      >\r\n        <CaptureListButton setCurrentPage={setCurrentPage} />\r\n        <CaptureButton setPhotoList={setPhotoList} photoList={photoList} />\r\n        <CheckToolButton setCurrentPage={setCurrentPage} />\r\n        <RecordAndPrescriptionButton setCurrentPage={setCurrentPage} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ButtonGroup;\r\n","import React from 'react'\r\n\r\nfunction RecordAndPrescription() {\r\n  return (\r\n    <div>RecordAndPrescription</div>\r\n  )\r\n}\r\n\r\nexport default RecordAndPrescription;","import React from 'react'\r\n\r\nfunction CheckTool() {\r\n  return (\r\n    <div>CheckTool</div>\r\n  )\r\n}\r\n\r\nexport default CheckTool;","import React, { useState } from \"react\";\r\nimport { BodyPixReactView } from \"body-pix-react-render\";\r\n//import 'body-pix-react-render/dist/index.css';\r\n\r\nconst default_option = {\r\n  algorithm: \"person\",\r\n  estimate: \"segmentation\",\r\n  camera: null,\r\n  flipHorizontal: true,\r\n  maskType: \"room\",\r\n  input: {\r\n    architecture: \"MobileNetV1\",\r\n    outputStride: 16,\r\n    internalResolution: \"medium\",\r\n    multiplier: 0.5,\r\n    quantBytes: 2,\r\n  },\r\n  multiPersonDecoding: {\r\n    maxDetections: 5,\r\n    scoreThreshold: 0.3,\r\n    nmsRadius: 20,\r\n    numKeypointForMatching: 17,\r\n    refineSteps: 10,\r\n  },\r\n  segmentation: {\r\n    segmentationThreshold: 0.7,\r\n    effect: \"mask\",\r\n    maskBackground: true,\r\n    opacity: 0.98,\r\n    backgroundBlurAmount: 3,\r\n    maskBlurAmount: 0,\r\n    edgeBlurAmount: 3,\r\n  },\r\n  showFps: false,\r\n  customStream: null,\r\n};\r\n\r\nexport const BodyPixView = () => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [start, setStart] = useState(false);\r\n\r\n  const options = {\r\n    //your custom options\r\n    showFps: false,\r\n    mediaOptions: {\r\n      audio: false,\r\n    },\r\n  };\r\n\r\n  const onEvent = (event) => {\r\n    if (event.event === \"READY\") {\r\n      let video = document.getElementById(\"remoteDisplay\");\r\n      if (video !== null) {\r\n        video.srcObject = event.stream;\r\n        video.play();\r\n      }\r\n    }\r\n  };\r\n  console.log(\"asd\");\r\n\r\n  //#region WebRTC\r\n  //     //#region WebRTC useEffect\r\n  //   const socketRef = useRef<SocketIOClient.Socket>(null);\r\n  //   const pcRef = useRef<RTCPeerConnection>(null);\r\n  //   const localVideoRef = useRef<HTMLVideoElement>(null);\r\n  //   const remoteVideoRef = useRef<HTMLVideoElement>(null);\r\n\r\n  //   const setVideoTracks = async () => {\r\n  //     try {\r\n  //       const stream = await navigator.mediaDevices.getUserMedia({\r\n  //         video: true,\r\n  //         audio: true,\r\n  //       });\r\n  //       if (localVideoRef.current) localVideoRef.current.srcObject = stream;\r\n  //       if (!(pcRef.current && socketRef.current)) return;\r\n  //       stream.getTracks().forEach((track) => {\r\n  //         if (!pcRef.current) return;\r\n  //         pcRef.current.addTrack(track, stream);\r\n  //       });\r\n  //       pcRef.current.onicecandidate = (e) => {\r\n  //         if (e.candidate) {\r\n  //           if (!socketRef.current) return;\r\n  //           console.log(\"onicecandidate\");\r\n  //           socketRef.current.emit(\"candidate\", e.candidate);\r\n  //         }\r\n  //       };\r\n  //       pcRef.current.oniceconnectionstatechange = (e) => {\r\n  //         console.log(e);\r\n  //       };\r\n  //       pcRef.current.ontrack = (ev) => {\r\n  //         console.log(\"add remotetrack success\");\r\n  //         if (remoteVideoRef.current) {\r\n  //           remoteVideoRef.current.srcObject = ev.streams[0];\r\n  //         }\r\n  //       };\r\n  //       socketRef.current.emit(\"join_room\", {\r\n  //         room: \"1234\",\r\n  //       });\r\n  //     } catch (e) {\r\n  //       console.error(e);\r\n  //     }\r\n  //   };\r\n\r\n  //   const createOffer = async () => {\r\n  //     console.log(\"create offer\");\r\n  //     if (!(pcRef.current && socketRef.current)) return;\r\n  //     try {\r\n  //       const sdp = await pcRef.current.createOffer({\r\n  //         offerToReceiveAudio: true,\r\n  //         offerToReceiveVideo: true,\r\n  //       });\r\n  //       await pcRef.current.setLocalDescription(new RTCSessionDescription(sdp));\r\n  //       socketRef.current.emit(\"offer\", sdp);\r\n  //     } catch (e) {\r\n  //       console.error(e);\r\n  //     }\r\n  //   };\r\n\r\n  //   const createAnswer = async (sdp) => {\r\n  //     if (!(pcRef.current && socketRef.current)) return;\r\n  //     try {\r\n  //       await pcRef.current.setRemoteDescription(new RTCSessionDescription(sdp));\r\n  //       console.log(\"answer set remote description success\");\r\n  //       const mySdp = await pcRef.current.createAnswer({\r\n  //         offerToReceiveVideo: true,\r\n  //         offerToReceiveAudio: true,\r\n  //       });\r\n  //       console.log(\"create answer\");\r\n  //       await pcRef.current.setLocalDescription(new RTCSessionDescription(mySdp));\r\n  //       socketRef.current.emit(\"answer\", mySdp);\r\n  //     } catch (e) {\r\n  //       console.error(e);\r\n  //     }\r\n  //   };\r\n\r\n//   useEffect(() => {\r\n    // socketRef.current = io.connect(SOCKET_SERVER_URL);\r\n    // pcRef.current = new RTCPeerConnection(pc_config);\r\n    //   socketRef.current.on(\"all_users\", (allUsers) => {\r\n    //     //Array<{ id: string }>\r\n    //     if (allUsers.length > 0) {\r\n    //       createOffer();\r\n    //     }\r\n    //   });\r\n    // socketRef.current.on(\"getOffer\", (sdp) => {\r\n    //   //console.log(sdp);\r\n    //   console.log(\"get offer\");\r\n    //   createAnswer(sdp);\r\n    // });\r\n    // socketRef.current.on(\"getAnswer\", (sdp) => {\r\n    //   console.log(\"get answer\");\r\n    //   if (!pcRef.current) return;\r\n    //   pcRef.current.setRemoteDescription(new RTCSessionDescription(sdp));\r\n    //   //console.log(sdp);\r\n    // });\r\n    // socketRef.current.on(\"getCandidate\", async (candidate) => {\r\n    //   if (!pcRef.current) return;\r\n    //   await pcRef.current.addIceCandidate(new RTCIceCandidate(candidate));\r\n    //   console.log(\"candidate add success\");\r\n    // });\r\n    // setVideoTracks();\r\n    // return () => {\r\n    //   if (socketRef.current) {\r\n    //     socketRef.current.disconnect();\r\n    //   }\r\n    //   if (pcRef.current) {\r\n    //     pcRef.current.close();\r\n    //   }\r\n    // };\r\n//   }, []);\r\n  //#endregion\r\n\r\n  //#endregion\r\n  return (\r\n    <div>\r\n      <button\r\n        style={{ marginLeft: \"100px\" }}\r\n        onClick={() => {\r\n          setStart(!start);\r\n        }}\r\n        disabled={start ? true : false}\r\n      >\r\n        Start\r\n      </button>\r\n      <button\r\n        style={{ marginLeft: \"100px\", marginBottom: \"100px\" }}\r\n        onClick={() => {\r\n          setVisible(!visible);\r\n        }}\r\n      >\r\n        {visible ? \"Hide View\" : \"Show View\"}\r\n      </button>\r\n      <br /> <br />\r\n      <BodyPixReactView options={options} visible={visible} start={start} onEvent={onEvent} />\r\n      <br />\r\n      <div style={{ zIndex: 99999 }}>\r\n        asd\r\n        {/* <video id=\"remoteDisplay\" width=\"480px\" height=\"360px\" style={{ border: \"1px solid #000\" }} /> */}\r\n        {/* <video\r\n          style={{\r\n            width: 240,\r\n            height: 240,\r\n            margin: 5,\r\n            backgroundColor: \"black\",\r\n          }}\r\n          muted\r\n          ref={localVideoRef}\r\n          autoPlay\r\n        />\r\n        <video\r\n          id=\"remotevideo\"\r\n          style={{\r\n            width: 240,\r\n            height: 240,\r\n            margin: 5,\r\n            backgroundColor: \"black\",\r\n          }}\r\n          ref={remoteVideoRef}\r\n          autoPlay\r\n        /> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport { initArgs, ZoomMtg } from \"@zoomus/websdk\";\r\nimport CaptureList from \"./page/CaptureList\";\r\nimport ButtonGroup from \"./components/ButtonGroup\";\r\nimport RecordAndPrescription from \"./page/RecordAndPrescription\";\r\nimport CheckTool from \"./page/CheckTool\";\r\nimport { BodyPixView } from \"./page/Bodypix\";\r\n\r\nZoomMtg.setZoomJSLib(\"https://source.zoom.us/2.4.5/lib\", \"/av\");\r\n\r\nZoomMtg.preLoadWasm();\r\nZoomMtg.prepareWebSDK();\r\n// loads language files, also passes any error messages to the ui\r\nZoomMtg.i18n.load(\"ko-KO\");\r\nZoomMtg.i18n.reload(\"ko-KO\");\r\n//ZoomMtg.i18n.load(\"en-US\");\r\n//ZoomMtg.i18n.reload(\"en-US\");\r\n\r\nfunction App() {\r\n  const [url, setUrl] = useState(\"https://zoom.us/j/92062736514?pwd=Nnh0NE4zRHJMZDA1eDljZ2hVY0JMUT09\");\r\n  const [name, setName] = useState(\"\");\r\n  const [isEnter, setIsEnter] = useState(false);\r\n  const [isHost, setIsHost] = useState(\"0\");\r\n  const [photoList, setPhotoList] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(\"\");\r\n  const [isModal, setIsModal] = useState(false);\r\n  const [src, setSrc] = useState(\"\");\r\n\r\n  const [isBodypix, setIsBodypix] = useState(false);\r\n  useEffect(() => {\r\n    if (document) {\r\n      const url = document.location.href.split(\"?url=\")[1];\r\n      if (url) setUrl(url);\r\n    }\r\n  }, []);\r\n\r\n  const sdkKey = \"xPN1ctkMLTAqaWGsE7FDSonJSEOO8B0XtQf8\";\r\n  const meetingNumber = url.slice(url.indexOf(\"/j/\") + 3, url.indexOf(\"pwd=\") - 1);\r\n  const leaveUrl = \"http://localhost:3000\";\r\n  const userEmail = \"\";\r\n  const passWord = url.slice(url.indexOf(\"pwd=\") + 4, url.length);\r\n  const sdkKeySecret = \"zaPNq6sYv9uKIUUI5wVCHGnqwnC8nG8F2p4U\";\r\n  const registrantToken = \"\";\r\n\r\n  const generateSDKSignature = () =>\r\n    ZoomMtg.generateSDKSignature({\r\n      sdkKey: sdkKey,\r\n      sdkSecret: sdkKeySecret,\r\n      meetingNumber: meetingNumber,\r\n      role: isHost,\r\n      success: () => console.info(\"generateSDKSignature success\"),\r\n      error: (e: any) => console.info(\"generateSDKSignature fail\", e),\r\n    });\r\n  function getSignature(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n    event.preventDefault();\r\n\r\n    const root = document.getElementById(\"zmmtg-root\");\r\n\r\n    if (!root) return;\r\n    root.style.display = \"block\"; //줌 강제로 보이게 하는건인듯\r\n\r\n    const setting: typeof initArgs = {\r\n      leaveUrl: leaveUrl,\r\n      showMeetingHeader: true,\r\n      disableInvite: false,\r\n      disableCallOut: false,\r\n      disableRecord: false,\r\n      disableJoinAudio: false,\r\n      audioPanelAlwaysOpen: true,\r\n      showPureSharingContent: true,\r\n      isSupportAV: true,\r\n      isSupportChat: true,\r\n      isSupportQA: true,\r\n      isSupportCC: true,\r\n      isSupportPolling: true,\r\n      isSupportBreakout: true,\r\n      screenShare: true,\r\n      //rwcBackup: string,\r\n      videoDrag: true,\r\n      //sharingMode: string,\r\n      videoHeader: false,\r\n      isLockBottom: false,\r\n      isSupportNonverbal: true,\r\n      isShowJoiningErrorDialog: true,\r\n\r\n      inviteUrlFormat: \"https://localhost:3000/?url=https://us04web.zoom.us/j/{0}?pwd={1}\",\r\n\r\n      meetingInfo: [\"participant\"],\r\n      disableVoIP: false,\r\n      disableReport: false,\r\n      disablePreview: false,\r\n      disableCORP: false,\r\n      onRetryCallback: true,\r\n      enableHD: true,\r\n      helper: \"what\",\r\n    };\r\n    const join_data = {\r\n      signature: generateSDKSignature(),\r\n      meetingNumber: meetingNumber,\r\n      userName: name,\r\n      sdkKey: sdkKey,\r\n      userEmail: userEmail,\r\n      passWord: passWord,\r\n      tk: registrantToken,\r\n      success: (success: any) => {\r\n        console.log(\"성공\");\r\n        setIsEnter(true);\r\n      },\r\n\r\n      error: (error: any) => console.log(error),\r\n    };\r\n    ZoomMtg.init({\r\n      ...setting,\r\n      success: (success: any) => ZoomMtg.join(join_data),\r\n      error: (error: any) => console.log(error),\r\n    });\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <main>\r\n        <h1>Zoom Meeting SDK Sample React</h1>\r\n        <br />\r\n        <p>주소 창에 zoom url을 입력하면 해당 ZOOM으로 접근이 가능합니다.</p>\r\n        <br />\r\n        <p>예: http://localhost:3000/?url={url}</p>\r\n        <br />\r\n\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <input\r\n            type=\"radio\"\r\n            id=\"트레이너\"\r\n            name=\"drone\"\r\n            value=\"1\"\r\n            checked={isHost == \"1\"}\r\n            onClick={() => setIsHost(\"1\")}\r\n          />\r\n          <label htmlFor=\"트레이너\" style={{ padding: \"0 0 0 4px\" }}>\r\n            트레이너(호스트)\r\n          </label>\r\n          <div style={{ marginRight: 8 }} />\r\n          <input\r\n            type=\"radio\"\r\n            id=\"참가자\"\r\n            name=\"drone\"\r\n            value=\"0\"\r\n            checked={isHost == \"0\"}\r\n            onClick={() => setIsHost(\"0\")}\r\n          />\r\n          <label htmlFor=\"참가자\" style={{ padding: \"0 0 0 4px\" }}>\r\n            참가자\r\n          </label>\r\n        </div>\r\n\r\n        <h2>참가자 이름</h2>\r\n        <input value={name} onChange={(e: any) => setName(e.target.value)} />\r\n        <br />\r\n        <button onClick={getSignature}>Join Meeting</button>\r\n      </main>\r\n\r\n      {isEnter && (\r\n        <>\r\n          <div\r\n            id=\"pullim-page\"\r\n            style={{\r\n              width: \"400px\",\r\n              position: \"absolute\",\r\n              top: 0,\r\n              zIndex: 1,\r\n              right: 0,\r\n              display: \"none\",\r\n              height: \"100vh\",\r\n              backgroundColor: \"rgba(255,255,255)\",\r\n              color: \"white\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              borderRadius: \"1% 0 0 1%\",\r\n              overflow: \"hidden\",\r\n              // wordWrap: \"break-word\",\r\n            }}\r\n          >\r\n            {currentPage === \"CaptureList\" && (\r\n              <CaptureList photoList={photoList} setPhotoList={setPhotoList} setIsModal={setIsModal} setSrc={setSrc} />\r\n            )}\r\n            {currentPage === \"RecordAndPrescription\" && <RecordAndPrescription />}\r\n            {currentPage === \"CheckTool\" && <CheckTool />}\r\n          </div>\r\n          <ButtonGroup setPhotoList={setPhotoList} photoList={photoList} setCurrentPage={setCurrentPage} />\r\n\r\n          <div style={{ position: \"absolute\", zIndex: 99999,top:400, left:0 }}>\r\n            <button onClick={() => setIsBodypix((prev) => !prev)} style={{color:'white'}} >그리드전환</button>\r\n          </div>\r\n          {isBodypix && (\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                left: 0,\r\n                zIndex: 99999999999,\r\n                top: 0,\r\n                width: 300,\r\n                height: \"60vh\",\r\n                backgroundColor: \"rgba(0,0,0,0.4)\",\r\n                color: \"white\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                overflow: \"scroll\",\r\n              }}\r\n            >\r\n              <div style={{ minHeight: \"1000px\" }}>\r\n                <BodyPixView />\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {isModal && (\r\n            <div\r\n              style={{\r\n                zIndex: 1,\r\n                position: \"absolute\",\r\n                width: \"1100px\",\r\n                top: \"10%\",\r\n                left: \"10%\",\r\n              }}\r\n            >\r\n              <img\r\n                style={{ width: \"100%\" }}\r\n                onClick={() => {\r\n                  setIsModal(false);\r\n                }}\r\n                src={src}\r\n                alt=\"aa\"\r\n              />\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}